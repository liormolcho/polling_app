[{"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\index.js":"1","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\index.js":"3","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\App\\index.js":"4","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\history.js":"5","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\store.js":"6","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\App\\App.js":"7","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\PollPage\\index.js":"8","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\HomePage\\index.js":"9","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\index.js":"10","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\CreatePollsPage\\index.js":"11","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\SetupPollPage\\index.js":"12","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\NotFoundPage\\index.js":"13","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\PollPage\\PollPage.js":"14","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\question.reducer.js":"15","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\questions.reducer.js":"16","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\choice.reducer.js":"17","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\CreatePollsPage\\CreatePollsPage.js":"18","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\SetupPollPage\\SetupPollPage.js":"19","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\NotFoundPage\\NotFoundPage.js":"20","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\HomePage\\HomePage.jsx":"21","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\index.js":"22","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\index.js":"23","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\choice.constants.js":"24","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\question.constants.js":"25","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\choice.actions.js":"26","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\question.actions.js":"27","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\index.js":"28","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\choice.service.js":"29","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\question.service.js":"30"},{"size":362,"mtime":1607210513486,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":52,"mtime":1607210889588,"results":"34","hashOfConfig":"32"},{"size":21,"mtime":1607205312362,"results":"35","hashOfConfig":"32"},{"size":97,"mtime":1607210874063,"results":"36","hashOfConfig":"32"},{"size":346,"mtime":1607260178529,"results":"37","hashOfConfig":"32"},{"size":2318,"mtime":1607292068298,"results":"38","hashOfConfig":"32"},{"size":27,"mtime":1607205670537,"results":"39","hashOfConfig":"32"},{"size":27,"mtime":1607205948780,"results":"40","hashOfConfig":"32"},{"size":297,"mtime":1607202431279,"results":"41","hashOfConfig":"32"},{"size":34,"mtime":1607205514252,"results":"42","hashOfConfig":"32"},{"size":32,"mtime":1607253190329,"results":"43","hashOfConfig":"32"},{"size":30,"mtime":1607205929264,"results":"44","hashOfConfig":"32"},{"size":2747,"mtime":1607292042293,"results":"45","hashOfConfig":"32"},{"size":555,"mtime":1607202218837,"results":"46","hashOfConfig":"32"},{"size":765,"mtime":1607202392077,"results":"47","hashOfConfig":"32"},{"size":935,"mtime":1607202330332,"results":"48","hashOfConfig":"32"},{"size":2044,"mtime":1607262536757,"results":"49","hashOfConfig":"32"},{"size":3242,"mtime":1607287231696,"results":"50","hashOfConfig":"32"},{"size":191,"mtime":1607205719824,"results":"51","hashOfConfig":"32"},{"size":1438,"mtime":1607262425030,"results":"52","hashOfConfig":"32"},{"size":70,"mtime":1607206499728,"results":"53","hashOfConfig":"32"},{"size":74,"mtime":1607212150604,"results":"54","hashOfConfig":"32"},{"size":388,"mtime":1607202109005,"results":"55","hashOfConfig":"32"},{"size":539,"mtime":1607202069241,"results":"56","hashOfConfig":"32"},{"size":2252,"mtime":1607273961452,"results":"57","hashOfConfig":"32"},{"size":2288,"mtime":1607262510921,"results":"58","hashOfConfig":"32"},{"size":70,"mtime":1607200900433,"results":"59","hashOfConfig":"32"},{"size":1155,"mtime":1607335991268,"results":"60","hashOfConfig":"32"},{"size":1334,"mtime":1607335980397,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1gefg75",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\index.js",[],["127","128"],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\App\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\history.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\helpers\\store.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\App\\App.js",["129","130"],"import PropTypes from 'prop-types'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Router, Route, Switch} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { history } from '../helpers';\nimport { HomePage } from '../HomePage';\nimport { PollPage } from '../PollPage';\nimport { CreatePollsPage } from '../CreatePollsPage';\nimport { NotFoundPage } from '../NotFoundPage';\nimport { SetupPollPage } from '../SetupPollPage';\n\nimport {\n  Button,\n  Container,\n  Menu,\n  Message,\n  Segment,\n} from 'semantic-ui-react'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const { dispatch } = this.props;\n    this.state = { activeItem: 'root' };\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render(){\n    const { activeItem } = this.state;\n    const { fixed } = false;\n\n    return (\n      <Router history={history}>\n        <Segment inverted textAlign='center' style={{ minHeight: 700, padding: '1em 0em' }} vertical>\n          <Menu\n            fixed={fixed}\n            inverted={!fixed}\n            pointing={!fixed}\n            secondary={!fixed}\n            size='large'\n          >\n            <Container>\n              <Menu.Item as={Link} to=\"/\"\n                name='root'\n                content='Home'\n                active={activeItem === 'root'}\n                onClick={this.handleItemClick}\n              />\n              \n              <Menu.Item position='right'>\n                <Button as={Link} to=\"/create\" color=\"teal\">create</Button>\n              </Menu.Item>\n            </Container>\n          </Menu>\n\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/create/\" component={CreatePollsPage} />\n            <Route path=\"/polls/:url\" component={PollPage} />\n            <Route path=\"/edit/:url\" component={SetupPollPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Segment>\n      </Router>\n    ) \n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.node,\n}\n\nfunction mapStateToProps(state) {\n  const { alert } = state;\n  return {\n    alert\n  };\n}\n\nconst connectedApp = connect(mapStateToProps)(App);\nexport { connectedApp as App };","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\PollPage\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\HomePage\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\CreatePollsPage\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\SetupPollPage\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\NotFoundPage\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\PollPage\\PollPage.js",["131","132","133","134","135","136"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Doughnut } from 'react-chartjs';\r\n\r\nimport { questionActions } from '../actions';\r\nimport { choiceActions } from '../actions';\r\n\r\nimport {\r\n\tButton,\r\n\tGrid,\r\n\tHeader,\r\n\tInput,\r\n\tSegment,\r\n\tLabel, \r\n\tList\r\n} from 'semantic-ui-react';\r\n\r\n\r\nclass PollPage extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\r\n\t\tthis.handleVoting = this.handleVoting.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { match, dispatch } = this.props;\r\n\r\n\t\tdispatch(questionActions.getQuestion(match.params.url));\r\n\t\tdispatch(choiceActions.getChoices(match.params.url));\r\n\t}\r\n\r\n\thandleOnChange(e) {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\thandleVoting(e) {\r\n\r\n\t\te.preventDefault();\r\n\t\tconst { dispatch } = this.props;\r\n\r\n\t\t// retrieve id and votes\r\n\t\tconst { id } = e.target;\r\n\t\tconst value = e.target.getAttribute('value');\r\n\r\n\t\tdispatch(choiceActions.voteForChoice(id));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { question, choices } = this.props;\r\n\r\n\t\tlet data, legend;\r\n\t\tif (choices.items){\r\n\t\t\tdata = choices.items.map((choice) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: choice.votes,\r\n\t\t\t\t\tlabel: choice.choice_text\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (Object.keys(this.refs).length > 0){\r\n\t\t\tlegend = this.refs.chart.getChart();\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid stackable>\r\n\t\t\t\t<Grid.Row centered colums={4}>\r\n\t\t\t\t\t{question.item &&\r\n\t\t\t\t\t\t<Header as='h1' color='teal'>\r\n\t\t\t\t\t\t\t{question.item.question_text}\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row centered colums={4}>\r\n\t\t\t\t\t<Header as='h14' color='teal'> notice, you can only vote once!:</Header>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row centered columns={3}>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Header as='h2' color='teal'>Choices are:</Header>\r\n\r\n\t\t\t\t\t\t{choices.items &&\r\n\t\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t\t{choices.items.map((choice, index) => {\r\n\t\t\t\t\t\t\t\t\treturn <Segment\r\n\t\t\t\t\t\t\t\t\t\tkey={choice.choice_text}\r\n\t\t\t\t\t\t\t\t\t\tclassName={'poll-item'}\r\n\t\t\t\t\t\t\t\t\t\tid={choice.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={choice.votes}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleVoting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{choice.choice_text}\r\n\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t{choices.items &&\r\n\t\t\t\t\t\t<Grid.Column textAlign='center'>\r\n\t\t\t\t\t\t\t<Doughnut ref='chart' data={data} height='400' width='400' />\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\tconst { question, choices } = state;\r\n\treturn {\r\n\t\tquestion,\r\n\t\tchoices,\r\n\t}\r\n}\r\n\r\nconst connectedPollPage = connect(mapStateToProps)(PollPage);\r\nexport { connectedPollPage as PollPage };","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\question.reducer.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\questions.reducer.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\reducers\\choice.reducer.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\CreatePollsPage\\CreatePollsPage.js",["137","138","139","140"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { questionActions } from '../actions';\r\nimport { history } from '../helpers';\r\n\r\nimport { Button, Form, Grid, Header, TextArea } from 'semantic-ui-react'\r\n\r\n\r\nclass CreatePollsPage extends React.Component {\r\n\r\n\t// simple page, a header, what page is this\r\n\t// create button is on the rightmost side of the header\r\n\t// a text box where user enters the question\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnewPoll: '',\r\n\t\t};\r\n\r\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\r\n\t\tthis.handleNewPoll = this.handleNewPoll.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { match, dispatch } = this.props;\r\n\t}\r\n\r\n\thandleNewPoll(e) {\r\n\t\tconst { dispatch } = this.props;\r\n\t\tconst { newPoll }\t= this.state;\r\n\t\tlet poll_url = Date.now()\r\n\t\tdispatch(questionActions.addQuestion(newPoll, poll_url));\r\n\t\thistory.push(`/edit/${poll_url}`);\r\n\t}\r\n\t\r\n\thandleOnChange(e) {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { newPoll } = this.state;\r\n\t\tconst { question } = this.props\r\n\t\treturn (\r\n\t\t\t<Grid stackable>\r\n\t\t\t\t<Grid.Row centered colums={4}>\r\n\t\t\t\t\t<Header as='h1' color='teal'>\r\n\t\t\t\t\t\tCreate a new poll\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t<Grid.Row centered columns={2}>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t\t\trows={6}\r\n\t\t\t\t\t\t\t\tname='newPoll'\r\n\t\t\t\t\t\t\t\tplaceholder='poll name'\r\n\t\t\t\t\t\t\t\tvalue={newPoll}\r\n\t\t\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tcolor='teal'\r\n\t\t\t\t\t\t\t\tsize='medium'\r\n\t\t\t\t\t\t\t\tcontent='Create poll'\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: '0.5em' }}\r\n\t\t\t\t\t\t\t\tonClick={this.handleNewPoll}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\tconst { question } = state;\r\n\treturn {\r\n\t\tquestion,\r\n\t}\r\n}\r\n\r\nconst connectedCreatePollsPage = connect()(CreatePollsPage);\r\nexport { connectedCreatePollsPage as CreatePollsPage };","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\SetupPollPage\\SetupPollPage.js",["141","142","143","144"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { questionActions } from '../actions';\r\nimport { choiceActions } from '../actions';\r\nimport { history } from '../helpers';\r\n\r\nimport {\r\n\tButton,\r\n\tGrid,\r\n\tHeader,\r\n\tInput,\r\n\tSegment\r\n} from 'semantic-ui-react';\r\n\r\n\r\nclass SetupPollPage extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnewChoice: '',\r\n\t\t};\r\n\r\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\r\n\t\tthis.handleNewChoice = this.handleNewChoice.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { match, dispatch } = this.props;\r\n\r\n\t\tdispatch(questionActions.getQuestion(match.params.url));\r\n\t\tdispatch(choiceActions.getChoices(match.params.url));\r\n\t}\r\n\r\n\thandleOnChange(e) {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\thandleNewChoice(question_id) {\r\n\t\tconst { match, dispatch } = this.props;\r\n\t\tconst { newChoice } = this.state;\r\n\r\n\t\tdispatch(choiceActions.addNewChoice(question_id, newChoice));\r\n\t\tthis.setState({ 'newChoice': newChoice });\r\n\t}\r\n\r\n\tCreateUrl() {\r\n\t\treturn window.location.href.replace(\"edit\", \"polls\")\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { question, choices } = this.props;\r\n\t\tconst { newChoice } = this.state;\r\n\r\n\t\tlet data, legend;\r\n\t\tif (choices.items){\r\n\t\t\tdata = choices.items.map((choice) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel: choice.choice_text\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (Object.keys(this.refs).length > 0){\r\n\t\t\tlegend = this.refs.chart.getChart();\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid stackable>\r\n\t\t\t\t<Grid.Row centered>\r\n\t\t\t\t\t{question.item &&\r\n\t\t\t\t\t\t<Header as='h1' color='teal'>\r\n\t\t\t\t\t\t\t{question.item.question_text}\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column textAlign='center'>\r\n\t\t\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\tname='newChoice'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='New Choice'\r\n\t\t\t\t\t\t\t\t\t\taction={\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='teal'\r\n\t\t\t\t\t\t\t\t\t\t\tcontent='Add'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleNewChoice(question.item.id)}/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvalue={newChoice}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row centered columns={3}>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Header as='h2' color='teal'>Choices are:</Header>\r\n\r\n\t\t\t\t\t\t{choices.items &&\r\n\t\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t\t{choices.items.map((choice, index) => {\r\n\t\t\t\t\t\t\t\t\treturn <Segment\r\n\t\t\t\t\t\t\t\t\t\tkey={choice.choice_text}\r\n\t\t\t\t\t\t\t\t\t\tclassName={'poll-item'}\r\n\t\t\t\t\t\t\t\t\t\tid={choice.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={choice.choice_text}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{choice.choice_text}\r\n\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t<Grid.Row centered columns={3}>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Header as='h2' color='teal'>Have your friends vote on this poll: </Header>\r\n\t\t\t\t\t\t \t<div> {this.CreateUrl()}</div>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\tconst { question, choices } = state;\r\n\treturn {\r\n\t\tquestion,\r\n\t\tchoices,\r\n\t}\r\n}\r\n\r\nconst connectedSetupPollPage = connect(mapStateToProps)(SetupPollPage);\r\nexport { connectedSetupPollPage as SetupPollPage };","C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\NotFoundPage\\NotFoundPage.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\HomePage\\HomePage.jsx",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\choice.constants.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\constants\\question.constants.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\choice.actions.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\actions\\question.actions.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\index.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\choice.service.js",[],"C:\\Users\\RFManager\\Documents\\GitHub\\polling_app\\frontend\\src\\services\\question.service.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":20,"column":3,"nodeType":"151","messageId":"152","endLine":20,"endColumn":10},{"ruleId":"149","severity":1,"message":"153","line":29,"column":13,"nodeType":"151","messageId":"152","endLine":29,"endColumn":21},{"ruleId":"149","severity":1,"message":"154","line":9,"column":2,"nodeType":"151","messageId":"152","endLine":9,"endColumn":8},{"ruleId":"149","severity":1,"message":"155","line":12,"column":2,"nodeType":"151","messageId":"152","endLine":12,"endColumn":7},{"ruleId":"149","severity":1,"message":"156","line":14,"column":2,"nodeType":"151","messageId":"152","endLine":14,"endColumn":7},{"ruleId":"149","severity":1,"message":"157","line":15,"column":2,"nodeType":"151","messageId":"152","endLine":15,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":47,"column":9,"nodeType":"151","messageId":"152","endLine":47,"endColumn":14},{"ruleId":"149","severity":1,"message":"159","line":66,"column":4,"nodeType":"151","messageId":"152","endLine":66,"endColumn":10},{"ruleId":"149","severity":1,"message":"160","line":28,"column":11,"nodeType":"151","messageId":"152","endLine":28,"endColumn":16},{"ruleId":"149","severity":1,"message":"153","line":28,"column":18,"nodeType":"151","messageId":"152","endLine":28,"endColumn":26},{"ruleId":"149","severity":1,"message":"161","line":46,"column":11,"nodeType":"151","messageId":"152","endLine":46,"endColumn":19},{"ruleId":"149","severity":1,"message":"162","line":82,"column":10,"nodeType":"151","messageId":"152","endLine":82,"endColumn":25},{"ruleId":"149","severity":1,"message":"163","line":6,"column":10,"nodeType":"151","messageId":"152","endLine":6,"endColumn":17},{"ruleId":"149","severity":1,"message":"160","line":43,"column":11,"nodeType":"151","messageId":"152","endLine":43,"endColumn":16},{"ruleId":"149","severity":1,"message":"164","line":60,"column":4,"nodeType":"151","messageId":"152","endLine":60,"endColumn":8},{"ruleId":"149","severity":1,"message":"159","line":68,"column":4,"nodeType":"151","messageId":"152","endLine":68,"endColumn":10},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'List' is defined but never used.","'value' is assigned a value but never used.","'legend' is assigned a value but never used.","'match' is assigned a value but never used.","'question' is assigned a value but never used.","'mapStateToProps' is defined but never used.","'history' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]